{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport type { NextRequest } from 'next/server'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n// 不需要认证的路由\r\nconst publicRoutes = ['/login', '/register']\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  console.log('中间件被触发');\r\n  const { pathname } = request.nextUrl\r\n  console.log('当前路径:', pathname);\r\n  console.log('请求方法:', request.method);\r\n\r\n  // 如果是公开路由，直接放行\r\n  if (publicRoutes.includes(pathname)) {\r\n    console.log('公开路由，直接放行:', pathname);\r\n    return NextResponse.next()\r\n  }\r\n\r\n  // 获取 token\r\n  const token = request.cookies.get('token')?.value\r\n  console.log('检查 token:', token ? '存在' : '不存在');\r\n  if (token) {\r\n    console.log('Token 值:', token.substring(0, 20) + '...');\r\n  }\r\n\r\n  // 如果没有 token，重定向到登录页\r\n  if (!token) {\r\n    console.log('未找到 token，重定向到登录页');\r\n    return NextResponse.redirect(new URL('/login', request.url))\r\n  }\r\n\r\n  try {\r\n    // 验证 token\r\n    console.log('验证 token...');\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET!)\r\n    console.log('token 验证成功，用户ID:', (decoded as any).userId);\r\n    return NextResponse.next()\r\n  } catch (error) {\r\n    console.log('token 验证失败:', error)\r\n    // token 无效，重定向到登录页\r\n    return NextResponse.redirect(new URL('/login', request.url))\r\n  }\r\n}\r\n\r\n// 配置需要运行中间件的路由\r\nexport const config = {\r\n  matcher: [\r\n    '/((?!_next/static|_next/image|favicon.ico).*)',\r\n  ]\r\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEA,WAAW;AACX,MAAM,eAAe;IAAC;IAAU;CAAY;AAErC,eAAe,WAAW,OAAoB;IACnD,QAAQ,GAAG,CAAC;IACZ,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,QAAQ,GAAG,CAAC,SAAS;IACrB,QAAQ,GAAG,CAAC,SAAS,QAAQ,MAAM;IAEnC,eAAe;IACf,IAAI,aAAa,QAAQ,CAAC,WAAW;QACnC,QAAQ,GAAG,CAAC,cAAc;QAC1B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,WAAW;IACX,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAC5C,QAAQ,GAAG,CAAC,aAAa,QAAQ,OAAO;IACxC,IAAI,OAAO;QACT,QAAQ,GAAG,CAAC,YAAY,MAAM,SAAS,CAAC,GAAG,MAAM;IACnD;IAEA,qBAAqB;IACrB,IAAI,CAAC,OAAO;QACV,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,IAAI;QACF,WAAW;QACX,QAAQ,GAAG,CAAC;QACZ,MAAM,UAAU,6IAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;QACxD,QAAQ,GAAG,CAAC,oBAAoB,AAAC,QAAgB,MAAM;QACvD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,eAAe;QAC3B,mBAAmB;QACnB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;AACF;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;KACD;AACH"}}]
}