{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://G%3A/english-word-learning-app/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  globalForPrisma.prisma = prisma\r\n}\r\n\r\n// 获取用户今日学习统计\r\nexport async function getTodayStats(userId: number) {\r\n  const today = new Date()\r\n  today.setHours(0, 0, 0, 0)\r\n\r\n  return prisma.dailyStat.findUnique({\r\n    where: {\r\n      userId_date: {\r\n        userId,\r\n        date: today\r\n      }\r\n    }\r\n  })\r\n} "],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C;IACzC,gBAAgB,MAAM,GAAG;AAC3B;AAGO,eAAe,cAAc,MAAc;IAChD,MAAM,QAAQ,IAAI;IAClB,MAAM,QAAQ,CAAC,GAAG,GAAG,GAAG;IAExB,OAAO,OAAO,SAAS,CAAC,UAAU,CAAC;QACjC,OAAO;YACL,aAAa;gBACX;gBACA,MAAM;YACR;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://G%3A/english-word-learning-app/src/app/api/progress/route.ts"],"sourcesContent":["import { getTodayStats, prisma } from '@/lib/prisma'\r\nimport { NextResponse } from 'next/server'\r\n\r\nexport async function GET() {\r\n  try {\r\n    // 暂时使用测试用户ID 1\r\n    const stats = await getTodayStats(1)\r\n    \r\n    if (!stats) {\r\n      return NextResponse.json({\r\n        todayLearned: 0,\r\n        todayGoal: 20,\r\n        streakDays: 0,\r\n        totalWords: 0,\r\n        reviewWords: 0,\r\n        accuracy: 0\r\n      })\r\n    }\r\n\r\n    return NextResponse.json({\r\n      todayLearned: stats.wordsLearned,\r\n      todayGoal: 20, // 每日目标\r\n      streakDays: 5, // 从用户表获取\r\n      totalWords: 150, // 从学习记录统计\r\n      reviewWords: stats.wordsReviewed,\r\n      accuracy: stats.accuracy * 100 // 转换为百分比\r\n    })\r\n  } catch (error) {\r\n    console.error('获取进度数据失败:', error)\r\n    return NextResponse.json(\r\n      { error: '获取数据失败' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json()\r\n    const { wordsLearned, wordsReviewed, accuracy, studyTime } = body\r\n\r\n    // 获取今天的日期（去掉时间部分）\r\n    const today = new Date()\r\n    today.setHours(0, 0, 0, 0)\r\n\r\n    // 更新或创建今日统计\r\n    const stats = await prisma.dailyStat.upsert({\r\n      where: {\r\n        userId: 1, // 暂时使用测试用户ID\r\n        date: today\r\n      },\r\n      update: {\r\n        wordsLearned,\r\n        wordsReviewed,\r\n        accuracy,\r\n        studyTime\r\n      },\r\n      create: {\r\n        userId: 1,\r\n        date: today,\r\n        wordsLearned,\r\n        wordsReviewed,\r\n        accuracy,\r\n        studyTime\r\n      }\r\n    })\r\n\r\n    return NextResponse.json(stats)\r\n  } catch (error) {\r\n    console.error('更新进度数据失败:', error)\r\n    return NextResponse.json(\r\n      { error: '更新数据失败' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,eAAe;QACf,MAAM,QAAQ,MAAM,CAAA,GAAA,sHAAA,CAAA,gBAAa,AAAD,EAAE;QAElC,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,cAAc;gBACd,WAAW;gBACX,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,UAAU;YACZ;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,cAAc,MAAM,YAAY;YAChC,WAAW;YACX,YAAY;YACZ,YAAY;YACZ,aAAa,MAAM,aAAa;YAChC,UAAU,MAAM,QAAQ,GAAG,IAAI,SAAS;QAC1C;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,aAAa;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAS,GAClB;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG;QAE7D,kBAAkB;QAClB,MAAM,QAAQ,IAAI;QAClB,MAAM,QAAQ,CAAC,GAAG,GAAG,GAAG;QAExB,YAAY;QACZ,MAAM,QAAQ,MAAM,sHAAA,CAAA,SAAM,CAAC,SAAS,CAAC,MAAM,CAAC;YAC1C,OAAO;gBACL,QAAQ;gBACR,MAAM;YACR;YACA,QAAQ;gBACN;gBACA;gBACA;gBACA;YACF;YACA,QAAQ;gBACN,QAAQ;gBACR,MAAM;gBACN;gBACA;gBACA;gBACA;YACF;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,aAAa;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAS,GAClB;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}